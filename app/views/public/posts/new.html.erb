<div class="container">
  <div class="row">
    <div class="col-12">
      <h2 class="mt-4 mb-4">新規投稿ページ</h2>
      <% if @post.errors.any? %>
        <div class="alert alert-danger" role="alert">
          <strong><%= @post.errors.count %>件のエラーが発生しました:</strong>
          <ul>
            <% @post.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      <% end %>

      <div class="form-group mt-4">
        <input id="address" type="textbox" placeholder="場所を検索" class="form-control">
        <button type="button" class="btn btn-primary mt-2" onclick="codeAddress()">検索</button>
      </div>
      <div id='map' class="mt-3 mb-3"></div>

      <%= form_with model: @post, local: true do |f| %>
        <div class="form-group">
          <label>タイトル</label>
          <%= f.text_field :title, autofocus: true, placeholder: "場所", class: "form-control" %>
        </div>

        <div class="form-group">
          <label>説明</label>
          <%= f.text_area :description, placeholder: "説明", class: "form-control" %>
        </div>

        <div class="form-group">
          <label>画像</label>
          <%= f.file_field :image, accept: "image/*", class: "form-control-file" %>
        </div>

        <div class="form-group">
          <label>タグ(スペースで複数登録できます)</label>
          <%= f.text_field :name, value: @tag_list, placeholder: "タグ", class: "form-control" %>
        </div>

        <%= f.fields_for :place do |place_fields| %>
          <%= place_fields.text_field :address, hidden: true, id: 'address_field', readonly: true %>
          <%= place_fields.text_field :latitude, hidden: true, id: 'latitude_field', readonly: true %>
          <%= place_fields.text_field :longitude, hidden: true, id: 'longitude_field', readonly: true %>
        <% end %>

        <div class="text-center mt-4 mb-4">
          <%= f.submit "投稿", class: "btn btn-primary" %>
        </div>
      <% end %>

    </div>
  </div>
</div>

<style>#map {height: 600px; width: 100%;}</style>
<script>
  let map;
  let geocoder;
  let address;
  let latitude;
  let longitude;
  let markers = [];

  function addMarker(location) {
    // 既存のマーカーを地図から削除する
    removeMarkers();

    // 指定された位置に新しいマーカーを作成し、markers配列に追加する
    let marker = new google.maps.Marker({
      position: location,
      map: map,
    });
    markers.push(marker);

    // マップのカメラを新しいマーカーの位置に移動する
    map.setCenter(location);

    // マーカーの位置を逆ジオコーディングして、HTMLタグに現在の住所を表示する
    geocoder.geocode({ location: location }, function (results, status) {
      if (status === "OK") {
        if (results[0]) {
          // 逆ジオコーディング結果から現在の住所を取得
          let currentAddress = results[0].formatted_address;
          // HTMLタグに現在の住所を出力
          document.getElementById("address_field").innerHTML = currentAddress;
        }
      }
    });
  }

  function removeMarkers() {
    // マップ上のすべてのマーカーを削除し、markers配列をクリアする
    for (let i = 0; i < markers.length; i++) {
      markers[i].setMap(null);
    }
    markers = [];
  }


  function codeAddress() {
    let inputAddress = document.getElementById("address").value;

    geocoder.geocode({ address: inputAddress }, function (results, status) {
      if (status == "OK") {
        // Add a marker at the input address and display its address and coordinates
        let currentAddress = results[0].formatted_address;
        let location = results[0].geometry.location;
        addMarker(location);

        // 住所と座標を取得してHTMLタグに表示
        address = currentAddress;
        latitude = location.lat();
        longitude = location.lng();
        document.getElementById("address_field").value = currentAddress;
        document.getElementById("latitude_field").value = location.lat();
        document.getElementById("longitude_field").value = location.lng();
      } else {
        alert("見つかりませんでした。");
      }
    });

    // 検索フォームからの値を取得
    var addressValue = document.getElementById('address').value;

    // titleフィールドに値を設定
    var titleField = document.querySelector('input[name="post[title]"]');
    titleField.value = addressValue;
  }

  function initMap() {
    geocoder = new google.maps.Geocoder();

    // 初期表示位置(東京駅)
    let initialLatLng = { lat: 35.68123620000001, lng: 139.7671248 };

    map = new google.maps.Map(document.getElementById("map"), {
      zoom: 15,
      center: initialLatLng,
    });

    // マーカーを追加(東京駅)
    let marker = new google.maps.Marker({
      position: initialLatLng,
      map: map,
    });
    markers.push(marker);

    // 逆ジオコーディングを行い、住所や座標を取得してHTMLタグに表示
    geocoder.geocode({ location: initialLatLng }, function (results, status) {
      if (status === "OK") {
        if (results[0]) {
          let currentAddress = results[0].formatted_address;

          address = currentAddress;
          latitude = initialLatLng.lat;
          longitude = initialLatLng.lng;

          // HTMLタグに表示
          document.getElementById("address_field").value = currentAddress;
          document.getElementById("latitude_field").value = initialLatLng.lat;
          document.getElementById("longitude_field").value = initialLatLng.lng;
        }
      }
    });
  }

  var script = document.createElement('script');
  script.src = "https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAPS_API_KEY'] %>&libraries=places&callback=initMap";
  script.async = true;

  // initMapをwindowオブジェクトにアタッチ
  window.initMap = initMap;
  // 'head'に'script'要素を追加
  document.head.appendChild(script);
</script>